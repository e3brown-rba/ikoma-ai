[project]
name = "ikoma"
version = "0.2.0"
description = "iKOMA AI Agent - Plan-Execute-Reflect Architecture"
dependencies = [
    "langchain==0.3.26",
    "langchain-core==0.3.68",
    "langchain-openai==0.3.27",
    "langchain-community==0.3.27",
    "langchain-chroma==0.2.3",
    "langgraph==0.5.1",
    "langgraph-checkpoint==2.1.0",
    "langgraph-checkpoint-sqlite==2.0.10",
    "chromadb==0.5.23",
    "sentence-transformers==2.2.2",
    "python-dotenv==1.0.1",
    "openai==1.93.0",
    "pydantic==2.11.7",
    "pydantic-core==2.33.2",
    "numexpr==2.11.0",
    "requests==2.31.0",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.12.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["agent*", "tools*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "langchain.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "langchain_core.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=agent",
    "--cov=tools",
    "--cov-report=term-missing",
    "--cov-report=xml",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.isort]
known-first-party = ["agent", "tools"] 