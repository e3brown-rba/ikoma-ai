name: CI

# ────────── Trigger on pushes & PRs to main ──────────
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel superseded runs (saves minutes on fast commits)
concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -e .
      - run: pip install ruff
      - run: ruff check .
      - run: ruff format --check --diff .

  typecheck:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -e .
      - run: pip install mypy types-beautifulsoup4
      - run: mypy agent tools --explicit-package-bases

  test:
    needs: typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      # Cache both pip downloads & .venv for speed
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
      - run: pip install -e .
      - run: pip install pytest pytest-cov
      - name: Run tests (POC mode - no coverage enforcement)
        run: |
          # Exclude dashboard tests from CI as they require a running server
          # Dashboard tests can be run locally with: pytest tests/ -m dashboard
          pytest tests/ -m "not dashboard" --cov --cov-report=term-missing
          # Note: No coverage enforcement for POC - just run tests to ensure they pass
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install "pip-audit>=2.9.0" bandit
      - run: pip install "gitpython>=3.1.41"  # Ensure secure version
      - name: Security audit
        run: |
          # Convert .pip-audit-ignore to individual --ignore-vuln flags
          IGNORE_FLAGS=()
          while IFS= read -r line; do
            # Skip empty lines and comments, trim whitespace
            line=$(echo "$line" | xargs)
            if [[ ! -z "$line" && ! "$line" =~ ^[[:space:]]*# ]]; then
              IGNORE_FLAGS+=("--ignore-vuln" "$line")
            fi
          done < .pip-audit-ignore

          # Run pip-audit with ignore flags
          pip-audit "${IGNORE_FLAGS[@]}"
      - run: bandit -r agent tools -ll

  build:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -e .
      - run: pip install build
      - run: python -m build --sdist --wheel --outdir dist/
